// Generated by CIRCT firtool-1.74.0
// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS
// Standard header to adapt well known macros for register randomization.
// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM
// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM
// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY
// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module MSHR(
  input         clock,
  input         reset,
  input  [7:0]  io_id,
  output        io_status_valid,
  output [8:0]  io_status_bits_set,
  output [18:0] io_status_bits_reqTag,
  output [18:0] io_status_bits_metaTag,
  output        io_status_bits_needsRepl,
  output        io_status_bits_w_c_resp,
  output        io_msInfo_valid,
  output [2:0]  io_msInfo_bits_channel,
  output [8:0]  io_msInfo_bits_set,
  output [2:0]  io_msInfo_bits_way,
  output [18:0] io_msInfo_bits_reqTag,
  output        io_msInfo_bits_willFree,
  output        io_msInfo_bits_aliasTask,
  output        io_msInfo_bits_needRelease,
  output        io_msInfo_bits_blockRefill,
  output [18:0] io_msInfo_bits_metaTag,
  output [1:0]  io_msInfo_bits_metaState,
  output        io_msInfo_bits_dirHit,
  output        io_msInfo_bits_isAcqOrPrefetch,
  output        io_msInfo_bits_isPrefetch,
  output [2:0]  io_msInfo_bits_param,
  output        io_msInfo_bits_mergeA,
  output        io_msInfo_bits_w_grantfirst,
  output        io_msInfo_bits_s_refill,
  output        io_msInfo_bits_w_releaseack,
  output        io_msInfo_bits_w_replResp,
  output        io_msInfo_bits_w_rprobeacklast,
  output        io_msInfo_bits_replaceData,
  input         io_alloc_valid,
  input         io_alloc_bits_dirResult_hit,
  input  [18:0] io_alloc_bits_dirResult_tag,
  input  [8:0]  io_alloc_bits_dirResult_set,
  input  [2:0]  io_alloc_bits_dirResult_way,
  input         io_alloc_bits_dirResult_meta_dirty,
  input  [1:0]  io_alloc_bits_dirResult_meta_state,
  input         io_alloc_bits_dirResult_meta_clients,
  input         io_alloc_bits_dirResult_meta_alias,
  input         io_alloc_bits_dirResult_meta_prefetch,
  input         io_alloc_bits_dirResult_meta_accessed,
  input         io_alloc_bits_state_s_acquire,
  input         io_alloc_bits_state_s_rprobe,
  input         io_alloc_bits_state_s_pprobe,
  input         io_alloc_bits_state_s_probeack,
  input         io_alloc_bits_state_s_refill,
  input         io_alloc_bits_state_w_rprobeackfirst,
  input         io_alloc_bits_state_w_rprobeacklast,
  input         io_alloc_bits_state_w_pprobeackfirst,
  input         io_alloc_bits_state_w_pprobeacklast,
  input         io_alloc_bits_state_w_pprobeack,
  input         io_alloc_bits_state_w_grantfirst,
  input         io_alloc_bits_state_w_grantlast,
  input         io_alloc_bits_state_w_grant,
  input         io_alloc_bits_state_w_replResp,
  input         io_alloc_bits_state_s_compack,
  input         io_alloc_bits_state_s_dct,
  input  [2:0]  io_alloc_bits_task_channel,
  input  [8:0]  io_alloc_bits_task_set,
  input  [18:0] io_alloc_bits_task_tag,
  input  [5:0]  io_alloc_bits_task_off,
  input         io_alloc_bits_task_alias,
  input         io_alloc_bits_task_isKeyword,
  input  [2:0]  io_alloc_bits_task_opcode,
  input  [2:0]  io_alloc_bits_task_param,
  input  [6:0]  io_alloc_bits_task_sourceId,
  input         io_alloc_bits_task_aliasTask,
  input         io_alloc_bits_task_fromL2pft,
  input  [3:0]  io_alloc_bits_task_reqSource,
  input         io_alloc_bits_task_snpHitRelease,
  input         io_alloc_bits_task_snpHitReleaseWithData,
  input  [7:0]  io_alloc_bits_task_snpHitReleaseIdx,
  input  [6:0]  io_alloc_bits_task_srcID,
  input  [7:0]  io_alloc_bits_task_txnID,
  input  [6:0]  io_alloc_bits_task_fwdNID,
  input  [7:0]  io_alloc_bits_task_fwdTxnID,
  input  [5:0]  io_alloc_bits_task_chiOpcode,
  input         io_alloc_bits_task_retToSrc,
  input         io_tasks_txreq_ready,
  output        io_tasks_txreq_valid,
  output [6:0]  io_tasks_txreq_bits_tgtID,
  output [7:0]  io_tasks_txreq_bits_txnID,
  output [5:0]  io_tasks_txreq_bits_opcode,
  output [47:0] io_tasks_txreq_bits_addr,
  output        io_tasks_txreq_bits_allowRetry,
  output [3:0]  io_tasks_txreq_bits_pCrdType,
  output        io_tasks_txreq_bits_memAttr_allocate,
  output        io_tasks_txreq_bits_expCompAck,
  input         io_tasks_txrsp_ready,
  output        io_tasks_txrsp_valid,
  output [6:0]  io_tasks_txrsp_bits_tgtID,
  output [7:0]  io_tasks_txrsp_bits_txnID,
  input         io_tasks_source_b_ready,
  output        io_tasks_source_b_valid,
  output [18:0] io_tasks_source_b_bits_tag,
  output [8:0]  io_tasks_source_b_bits_set,
  output [1:0]  io_tasks_source_b_bits_param,
  output        io_tasks_source_b_bits_alias,
  input         io_tasks_mainpipe_ready,
  output        io_tasks_mainpipe_valid,
  output [2:0]  io_tasks_mainpipe_bits_channel,
  output [2:0]  io_tasks_mainpipe_bits_txChannel,
  output [8:0]  io_tasks_mainpipe_bits_set,
  output [18:0] io_tasks_mainpipe_bits_tag,
  output [5:0]  io_tasks_mainpipe_bits_off,
  output        io_tasks_mainpipe_bits_alias,
  output        io_tasks_mainpipe_bits_isKeyword,
  output [2:0]  io_tasks_mainpipe_bits_opcode,
  output [2:0]  io_tasks_mainpipe_bits_param,
  output [2:0]  io_tasks_mainpipe_bits_size,
  output [6:0]  io_tasks_mainpipe_bits_sourceId,
  output [7:0]  io_tasks_mainpipe_bits_mshrId,
  output        io_tasks_mainpipe_bits_aliasTask,
  output        io_tasks_mainpipe_bits_useProbeData,
  output        io_tasks_mainpipe_bits_mshrRetry,
  output        io_tasks_mainpipe_bits_fromL2pft,
  output        io_tasks_mainpipe_bits_dirty,
  output [2:0]  io_tasks_mainpipe_bits_way,
  output        io_tasks_mainpipe_bits_meta_dirty,
  output [1:0]  io_tasks_mainpipe_bits_meta_state,
  output        io_tasks_mainpipe_bits_meta_clients,
  output        io_tasks_mainpipe_bits_meta_alias,
  output        io_tasks_mainpipe_bits_meta_prefetch,
  output [2:0]  io_tasks_mainpipe_bits_meta_prefetchSrc,
  output        io_tasks_mainpipe_bits_meta_accessed,
  output        io_tasks_mainpipe_bits_metaWen,
  output        io_tasks_mainpipe_bits_tagWen,
  output        io_tasks_mainpipe_bits_dsWen,
  output        io_tasks_mainpipe_bits_replTask,
  output [3:0]  io_tasks_mainpipe_bits_reqSource,
  output        io_tasks_mainpipe_bits_mergeA,
  output [5:0]  io_tasks_mainpipe_bits_aMergeTask_off,
  output        io_tasks_mainpipe_bits_aMergeTask_alias,
  output [32:0] io_tasks_mainpipe_bits_aMergeTask_vaddr,
  output        io_tasks_mainpipe_bits_aMergeTask_isKeyword,
  output [2:0]  io_tasks_mainpipe_bits_aMergeTask_opcode,
  output [2:0]  io_tasks_mainpipe_bits_aMergeTask_param,
  output [6:0]  io_tasks_mainpipe_bits_aMergeTask_sourceId,
  output        io_tasks_mainpipe_bits_aMergeTask_meta_dirty,
  output [1:0]  io_tasks_mainpipe_bits_aMergeTask_meta_state,
  output        io_tasks_mainpipe_bits_aMergeTask_meta_clients,
  output        io_tasks_mainpipe_bits_aMergeTask_meta_alias,
  output        io_tasks_mainpipe_bits_aMergeTask_meta_accessed,
  output        io_tasks_mainpipe_bits_snpHitRelease,
  output        io_tasks_mainpipe_bits_snpHitReleaseWithData,
  output [7:0]  io_tasks_mainpipe_bits_snpHitReleaseIdx,
  output [6:0]  io_tasks_mainpipe_bits_tgtID,
  output [7:0]  io_tasks_mainpipe_bits_txnID,
  output [6:0]  io_tasks_mainpipe_bits_homeNID,
  output [7:0]  io_tasks_mainpipe_bits_dbID,
  output [5:0]  io_tasks_mainpipe_bits_chiOpcode,
  output [2:0]  io_tasks_mainpipe_bits_resp,
  output [2:0]  io_tasks_mainpipe_bits_fwdState,
  output        io_tasks_mainpipe_bits_retToSrc,
  output        io_tasks_mainpipe_bits_allowRetry,
  output        io_tasks_mainpipe_bits_memAttr_allocate,
  output        io_tasks_mainpipe_bits_memAttr_cacheable,
  output        io_tasks_mainpipe_bits_memAttr_ewa,
  input         io_resps_sinkC_valid,
  input  [2:0]  io_resps_sinkC_bits_opcode,
  input  [2:0]  io_resps_sinkC_bits_param,
  input         io_resps_sinkC_bits_last,
  input         io_resps_rxrsp_valid,
  input  [5:0]  io_resps_rxrsp_bits_chiOpcode,
  input  [6:0]  io_resps_rxrsp_bits_srcID,
  input  [7:0]  io_resps_rxrsp_bits_dbID,
  input  [2:0]  io_resps_rxrsp_bits_resp,
  input  [3:0]  io_resps_rxrsp_bits_pCrdType,
  input         io_resps_rxdat_valid,
  input  [5:0]  io_resps_rxdat_bits_chiOpcode,
  input  [6:0]  io_resps_rxdat_bits_homeNID,
  input  [7:0]  io_resps_rxdat_bits_dbID,
  input  [2:0]  io_resps_rxdat_bits_resp,
  input  [8:0]  io_nestedwb_set,
  input  [18:0] io_nestedwb_tag,
  input         io_nestedwb_c_set_dirty,
  input         io_nestedwb_b_inv_dirty,
  input         io_nestedwb_b_toB,
  input         io_nestedwb_b_toN,
  output        io_nestedwbData,
  input         io_aMergeTask_valid,
  input  [5:0]  io_aMergeTask_bits_off,
  input         io_aMergeTask_bits_alias,
  input  [32:0] io_aMergeTask_bits_vaddr,
  input         io_aMergeTask_bits_isKeyword,
  input  [2:0]  io_aMergeTask_bits_opcode,
  input  [2:0]  io_aMergeTask_bits_param,
  input  [6:0]  io_aMergeTask_bits_sourceId,
  input         io_replResp_valid,
  input  [18:0] io_replResp_bits_tag,
  input  [2:0]  io_replResp_bits_way,
  input         io_replResp_bits_meta_dirty,
  input  [1:0]  io_replResp_bits_meta_state,
  input         io_replResp_bits_meta_clients,
  input         io_replResp_bits_meta_alias,
  input         io_replResp_bits_meta_prefetch,
  input         io_replResp_bits_meta_accessed,
  input         io_replResp_bits_retry,
  output        io_waitPCrdInfo_valid,
  output [6:0]  io_waitPCrdInfo_srcID,
  output [3:0]  io_waitPCrdInfo_pCrdType
);

  wire [7:0][2:0] _GEN = '{3'h4, 3'h5, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
  reg             gotT;
  reg             gotDirty;
  reg             gotGrantData;
  reg             probeDirty;
  reg             probeGotN;
  reg             req_valid;
  reg  [2:0]      req_channel;
  reg  [8:0]      req_set;
  reg  [18:0]     req_tag;
  reg  [5:0]      req_off;
  reg             req_alias;
  reg             req_isKeyword;
  reg  [2:0]      req_opcode;
  reg  [2:0]      req_param;
  reg  [6:0]      req_sourceId;
  reg             req_aliasTask;
  reg             req_fromL2pft;
  reg  [3:0]      req_reqSource;
  reg             req_snpHitRelease;
  reg             req_snpHitReleaseWithData;
  reg  [7:0]      req_snpHitReleaseIdx;
  reg  [6:0]      req_srcID;
  reg  [7:0]      req_txnID;
  reg  [6:0]      req_fwdNID;
  reg  [7:0]      req_fwdTxnID;
  reg  [5:0]      req_chiOpcode;
  reg             req_retToSrc;
  reg             dirResult_hit;
  reg  [18:0]     dirResult_tag;
  reg  [8:0]      dirResult_set;
  reg  [2:0]      dirResult_way;
  reg             dirResult_meta_dirty;
  reg  [1:0]      dirResult_meta_state;
  reg             dirResult_meta_clients;
  reg             dirResult_meta_alias;
  reg             dirResult_meta_prefetch;
  reg             dirResult_meta_accessed;
  reg             state_s_acquire;
  reg             state_s_rprobe;
  reg             state_s_pprobe;
  reg             state_s_release;
  reg             state_s_probeack;
  reg             state_s_refill;
  reg             state_s_retry;
  reg             state_w_rprobeackfirst;
  reg             state_w_rprobeacklast;
  reg             state_w_pprobeackfirst;
  reg             state_w_pprobeacklast;
  reg             state_w_pprobeack;
  reg             state_w_grantfirst;
  reg             state_w_grantlast;
  reg             state_w_grant;
  reg             state_w_releaseack;
  reg             state_w_replResp;
  reg             state_s_compack;
  reg             state_s_cbwrdata;
  reg             state_s_reissue;
  reg             state_s_dct;
  reg  [1:0]      retryTimes;
  reg  [4:0]      backoffTimer;
  reg  [6:0]      srcid;
  reg  [6:0]      homenid;
  reg  [7:0]      dbid;
  reg  [3:0]      pcrdtype;
  reg             gotRetryAck;
  reg             gotPCrdGrant;
  wire [2:0]      _metaChi_T = {dirResult_meta_dirty, dirResult_meta_state};
  wire            req_prefetch = req_opcode == 3'h5;
  wire            _req_acquire_T = req_opcode == 3'h6;
  wire            req_needT =
    ~(req_opcode[2]) | req_prefetch & req_param == 3'h1 | (_req_acquire_T | (&req_opcode))
    & (|req_param);
  wire            req_get = req_opcode == 3'h4;
  wire            req_acquire = _req_acquire_T & req_channel[0] | (&req_opcode);
  wire            _respPassDirty_T_1 = req_chiOpcode == 6'h7;
  wire            _fwdPassDirty_T = req_chiOpcode == 6'h17;
  wire            _respPassDirty_T_3 = req_chiOpcode == 6'h5;
  wire            _respPassDirty_T_7 = req_chiOpcode == 6'h9;
  wire            snpToN =
    _respPassDirty_T_1 | _fwdPassDirty_T | _respPassDirty_T_3 | _respPassDirty_T_7
    | req_chiOpcode == 6'hA | req_chiOpcode == 6'h6;
  wire            _doRespData_retToSrc_nonFwd_T_2 = req_chiOpcode == 6'h2;
  wire            _fwdCacheState_T = req_chiOpcode == 6'h12;
  wire            _doRespData_retToSrc_nonFwd_T_5 = req_chiOpcode == 6'h1;
  wire            _fwdCacheState_T_3 = req_chiOpcode == 6'h11;
  wire            _doRespData_retToSrc_nonFwd_T_3 = req_chiOpcode == 6'h4;
  wire            _fwdCacheState_T_1 = req_chiOpcode == 6'h14;
  wire            snpToB =
    _doRespData_retToSrc_nonFwd_T_2 | _fwdCacheState_T | _doRespData_retToSrc_nonFwd_T_5
    | _fwdCacheState_T_3 | _doRespData_retToSrc_nonFwd_T_3 | _fwdCacheState_T_1;
  wire            _mp_probeack_task_mp_probeack_meta_x5_T_6 = req_chiOpcode == 6'h3;
  wire            _respPassDirty_T_5 = req_chiOpcode == 6'h8;
  wire            doRespData_dirty =
    (dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty)
    & (_mp_probeack_task_mp_probeack_meta_x5_T_6 | snpToB | _respPassDirty_T_1
       | _respPassDirty_T_3 | _respPassDirty_T_5 | _respPassDirty_T_7);
  wire            doRespData_retToSrc_fwd =
    req_retToSrc
    & (_fwdCacheState_T | _fwdCacheState_T_1 | _fwdCacheState_T_3 | _fwdPassDirty_T);
  wire            _mp_grant_task_mp_grant_useProbeData_T_1 = dirResult_meta_state == 2'h1;
  wire            doRespData_retToSrc_nonFwd =
    req_retToSrc & _mp_grant_task_mp_grant_useProbeData_T_1
    & (_doRespData_retToSrc_nonFwd_T_2 | _doRespData_retToSrc_nonFwd_T_3
       | _doRespData_retToSrc_nonFwd_T_5 | _respPassDirty_T_1 | _respPassDirty_T_3);
  wire            _mp_probeack_task_mp_probeack_resp_T =
    req_snpHitRelease & req_snpHitReleaseWithData;
  wire            doRespData =
    dirResult_hit
      ? doRespData_dirty | doRespData_retToSrc_fwd | doRespData_retToSrc_nonFwd
      : _mp_probeack_task_mp_probeack_resp_T;
  wire            _doFwdHitRelease_T = req_chiOpcode > 6'h10;
  wire            _b_task_io_tasks_source_b_bits_param_T_4 = dirResult_meta_state == 2'h2;
  wire            mp_grant_task_mp_grant_meta_entry_accessed = req_acquire | req_get;
  wire            req_promoteT =
    (mp_grant_task_mp_grant_meta_entry_accessed | req_prefetch)
    & (dirResult_hit & ~dirResult_meta_clients & (&dirResult_meta_state) | ~dirResult_hit
       & gotT | dirResult_hit & req_aliasTask
       & (_b_task_io_tasks_source_b_bits_param_T_4 | (&dirResult_meta_state)));
  wire            release_valid1 =
    ~state_s_release & state_w_rprobeacklast & state_w_grantlast & state_w_replResp;
  wire            release_valid2 =
    ~state_s_reissue & ~state_w_releaseack & gotRetryAck & gotPCrdGrant;
  wire            io_tasks_txreq_valid_0 =
    ~state_s_acquire | ~state_s_reissue & ~state_w_grant & gotRetryAck & gotPCrdGrant
    | release_valid2;
  wire            io_tasks_txrsp_valid_0 = ~state_s_compack & state_w_grantlast;
  wire            io_tasks_source_b_valid_0 = ~state_s_pprobe | ~state_s_rprobe;
  wire            mp_cbwrdata_valid = ~state_s_cbwrdata & state_w_releaseack;
  wire            mp_probeack_valid = ~state_s_probeack & state_w_pprobeacklast;
  wire            pending_grant_valid =
    ~state_s_refill & state_w_grantlast & state_w_rprobeacklast;
  wire            _mp_grant_valid_T = retryTimes != 2'h3;
  wire            mp_grant_valid =
    pending_grant_valid & (_mp_grant_valid_T | backoffTimer == 5'h14);
  wire            mp_dct_valid = ~state_s_dct & state_s_probeack;
  wire            _mp_probeack_task_mp_probeack_meta_x5_T_7 = req_chiOpcode == 6'h13;
  wire            _mp_grant_task_mp_grant_aMergeTask_meta_x12_T =
    probeDirty | dirResult_meta_dirty;
  wire [2:0]      fwdCacheState =
    _fwdCacheState_T | _fwdCacheState_T_1 | _fwdCacheState_T_3
      ? 3'h1
      : {1'h0, _fwdPassDirty_T, 1'h0};
  wire            _mp_grant_task_mp_grant_param_T_6 = req_param == 3'h1;
  wire            a_task_isWriteBackFull =
    dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty;
  wire            _mp_grant_task_mp_grant_useProbeData_T = req_get & dirResult_hit;
  wire            mp_release_task_isWriteBackFull =
    dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty;
  wire [1:0]      _mp_probeack_task_mp_probeack_chiOpcode_T_1 =
    {_doFwdHitRelease_T & dirResult_hit | _doFwdHitRelease_T & req_snpHitRelease
       & req_snpHitReleaseWithData,
     doRespData};
  wire [2:0]      _mp_dct_task_mp_dct_resp_T =
    {_fwdPassDirty_T & _mp_grant_task_mp_grant_aMergeTask_meta_x12_T, 2'h0};
  reg             mergeA;
  wire            _mp_grant_task_aliasFinal_T = req_get | req_prefetch;
  wire [2:0]      _GEN_0 = {2'h0, ~req_promoteT};
  wire            mp_grant_alias =
    _mp_grant_task_aliasFinal_T ? dirResult_meta_alias : req_alias;
  reg  [5:0]      mp_grant_task_merge_task_r_off;
  reg             mp_grant_task_merge_task_r_alias;
  reg  [32:0]     mp_grant_task_merge_task_r_vaddr;
  reg             mp_grant_task_merge_task_r_isKeyword;
  reg  [2:0]      mp_grant_task_merge_task_r_opcode;
  reg  [2:0]      mp_grant_task_merge_task_r_param;
  reg  [6:0]      mp_grant_task_merge_task_r_sourceId;
  wire            mp_grant_aMergeTask_alias =
    io_aMergeTask_valid ? io_aMergeTask_bits_alias : mp_grant_task_merge_task_r_alias;
  wire [2:0]      mp_grant_task_merge_task_opcode =
    io_aMergeTask_valid ? io_aMergeTask_bits_opcode : mp_grant_task_merge_task_r_opcode;
  wire [2:0]      mp_grant_task_merge_task_param =
    io_aMergeTask_valid ? io_aMergeTask_bits_param : mp_grant_task_merge_task_r_param;
  wire            _io_tasks_mainpipe_bits_T = mp_grant_valid | release_valid1;
  wire            _GEN_1 = mp_cbwrdata_valid | mp_probeack_valid;
  wire            _GEN_2 = _io_tasks_mainpipe_bits_T & mp_grant_valid;
  wire            _GEN_3 = _io_tasks_mainpipe_bits_T | mp_cbwrdata_valid;
  wire            will_free =
    state_s_refill & state_s_probeack & state_s_release & state_s_compack
    & state_s_cbwrdata & state_s_reissue & state_s_dct & state_w_rprobeacklast
    & state_w_pprobeacklast & state_w_grantlast & state_w_releaseack & state_w_replResp;
  reg             io_msInfo_bits_blockRefill_REG;
  reg             io_msInfo_bits_blockRefill_REG_1;
  reg             io_msInfo_bits_blockRefill_REG_2;
  wire            _nestedwb_hit_match_T_1 = dirResult_set == io_nestedwb_set;
  wire            _nestedwb_hit_match_T_3 = dirResult_tag == io_nestedwb_tag;
  wire            nestedwb_match =
    req_valid & (|dirResult_meta_state) & _nestedwb_hit_match_T_1
    & _nestedwb_hit_match_T_3 & state_w_replResp;
  wire            _GEN_4 =
    io_alloc_valid ? io_alloc_bits_state_w_grantfirst : state_w_grantfirst;
  wire            _acquire_ts_T = io_tasks_txreq_ready & io_tasks_txreq_valid_0;
  wire            _GEN_5 = ~state_s_reissue | io_alloc_valid;
  wire            _GEN_6 =
    _acquire_ts_T & release_valid2
      ? ~(dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty)
      : io_alloc_valid | state_s_cbwrdata;
  wire            _probe_ts_T = io_tasks_source_b_ready & io_tasks_source_b_valid_0;
  wire            _GEN_7 = io_tasks_mainpipe_ready & mp_grant_valid;
  wire            _GEN_8 = ~io_tasks_mainpipe_ready | mp_grant_valid;
  wire            _GEN_9 =
    ~io_tasks_mainpipe_ready | mp_grant_valid | release_valid1 | ~mp_cbwrdata_valid;
  wire            _GEN_10 = io_resps_sinkC_bits_opcode == 3'h5;
  wire            _GEN_11 =
    io_resps_sinkC_valid & (io_resps_sinkC_bits_opcode == 3'h4 | _GEN_10);
  wire            rxdatIsU_PD = io_resps_rxdat_bits_resp == 3'h6;
  wire            _GEN_12 = io_resps_rxdat_valid & io_resps_rxdat_bits_chiOpcode == 6'h4;
  wire            _GEN_13 = io_resps_rxrsp_bits_chiOpcode == 6'h4;
  wire            _GEN_14 = io_resps_rxrsp_valid & _GEN_13 & ~state_w_grant;
  wire            _GEN_15 = io_resps_rxrsp_bits_chiOpcode == 6'h5;
  wire            _GEN_16 = _GEN_15 | _GEN_13;
  wire            _GEN_17 = io_resps_rxrsp_bits_chiOpcode == 6'h3;
  wire            _GEN_18 = io_resps_rxrsp_valid & _GEN_17;
  wire            _GEN_19 = io_resps_rxrsp_valid & io_resps_rxrsp_bits_chiOpcode == 6'h7;
  wire            _GEN_20 = io_replResp_valid & io_replResp_bits_retry;
  wire            _GEN_21 = io_replResp_valid & ~io_replResp_bits_retry;
  wire            _GEN_22 =
    _GEN_21
      ? io_replResp_bits_meta_dirty
      : io_alloc_valid ? io_alloc_bits_dirResult_meta_dirty : dirResult_meta_dirty;
  wire            _GEN_23 = _GEN_21 & (|io_replResp_bits_meta_state);
  wire            _GEN_24 =
    _GEN_21 & (|io_replResp_bits_meta_state) & io_replResp_bits_meta_clients;
  wire            nestedwb_hit_match =
    req_valid & dirResult_hit & _nestedwb_hit_match_T_1 & _nestedwb_hit_match_T_3;
  wire            _GEN_25 = nestedwb_match & io_nestedwb_b_inv_dirty;
  wire            _GEN_26 = nestedwb_hit_match & io_nestedwb_b_toN;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      gotT <= 1'h0;
      gotDirty <= 1'h0;
      gotGrantData <= 1'h0;
      probeDirty <= 1'h0;
      probeGotN <= 1'h0;
      req_valid <= 1'h0;
      req_channel <= 3'h0;
      req_set <= 9'h0;
      req_tag <= 19'h0;
      req_off <= 6'h0;
      req_alias <= 1'h0;
      req_isKeyword <= 1'h0;
      req_opcode <= 3'h0;
      req_param <= 3'h0;
      req_sourceId <= 7'h0;
      req_aliasTask <= 1'h0;
      req_fromL2pft <= 1'h0;
      req_reqSource <= 4'h0;
      req_snpHitRelease <= 1'h0;
      req_snpHitReleaseWithData <= 1'h0;
      req_snpHitReleaseIdx <= 8'h0;
      req_srcID <= 7'h0;
      req_txnID <= 8'h0;
      req_fwdNID <= 7'h0;
      req_fwdTxnID <= 8'h0;
      req_chiOpcode <= 6'h0;
      req_retToSrc <= 1'h0;
      dirResult_hit <= 1'h0;
      dirResult_tag <= 19'h0;
      dirResult_set <= 9'h0;
      dirResult_way <= 3'h0;
      dirResult_meta_dirty <= 1'h0;
      dirResult_meta_state <= 2'h0;
      dirResult_meta_clients <= 1'h0;
      dirResult_meta_alias <= 1'h0;
      dirResult_meta_prefetch <= 1'h0;
      dirResult_meta_accessed <= 1'h0;
      state_s_acquire <= 1'h1;
      state_s_rprobe <= 1'h1;
      state_s_pprobe <= 1'h1;
      state_s_release <= 1'h1;
      state_s_probeack <= 1'h1;
      state_s_refill <= 1'h1;
      state_s_retry <= 1'h1;
      state_w_rprobeackfirst <= 1'h1;
      state_w_rprobeacklast <= 1'h1;
      state_w_pprobeackfirst <= 1'h1;
      state_w_pprobeacklast <= 1'h1;
      state_w_pprobeack <= 1'h1;
      state_w_grantfirst <= 1'h1;
      state_w_grantlast <= 1'h1;
      state_w_grant <= 1'h1;
      state_w_releaseack <= 1'h1;
      state_w_replResp <= 1'h1;
      state_s_compack <= 1'h1;
      state_s_cbwrdata <= 1'h1;
      state_s_reissue <= 1'h1;
      state_s_dct <= 1'h1;
      retryTimes <= 2'h0;
      backoffTimer <= 5'h0;
      srcid <= 7'h0;
      homenid <= 7'h0;
      dbid <= 8'h0;
      pcrdtype <= 4'h0;
      gotRetryAck <= 1'h0;
      gotPCrdGrant <= 1'h0;
      mergeA <= 1'h0;
      mp_grant_task_merge_task_r_off <= 6'h0;
      mp_grant_task_merge_task_r_alias <= 1'h0;
      mp_grant_task_merge_task_r_vaddr <= 33'h0;
      mp_grant_task_merge_task_r_isKeyword <= 1'h0;
      mp_grant_task_merge_task_r_opcode <= 3'h0;
      mp_grant_task_merge_task_r_param <= 3'h0;
      mp_grant_task_merge_task_r_sourceId <= 7'h0;
      io_msInfo_bits_blockRefill_REG <= 1'h0;
      io_msInfo_bits_blockRefill_REG_1 <= 1'h0;
      io_msInfo_bits_blockRefill_REG_2 <= 1'h0;
    end
    else begin
      gotT <=
        _GEN_14
          ? io_resps_rxrsp_bits_resp == 3'h2
          : _GEN_12
              ? io_resps_rxdat_bits_resp == 3'h2 | rxdatIsU_PD
              : ~io_alloc_valid & gotT;
      gotDirty <=
        ~_GEN_14 & (_GEN_12 ? gotDirty | rxdatIsU_PD : ~io_alloc_valid & gotDirty);
      gotGrantData <= _GEN_12 | ~io_alloc_valid & gotGrantData;
      probeDirty <=
        ~_GEN_25 & (io_resps_sinkC_valid & _GEN_10 | ~io_alloc_valid & probeDirty);
      probeGotN <=
        io_resps_sinkC_valid
        & (io_resps_sinkC_bits_param == 3'h1 | io_resps_sinkC_bits_param == 3'h2
           | io_resps_sinkC_bits_param == 3'h5) | ~io_alloc_valid & probeGotN;
      req_valid <= ~(will_free & req_valid) & (io_alloc_valid | req_valid);
      if (io_alloc_valid) begin
        req_channel <= io_alloc_bits_task_channel;
        req_set <= io_alloc_bits_task_set;
        req_tag <= io_alloc_bits_task_tag;
        req_off <= io_alloc_bits_task_off;
        req_alias <= io_alloc_bits_task_alias;
        req_isKeyword <= io_alloc_bits_task_isKeyword;
        req_opcode <= io_alloc_bits_task_opcode;
        req_param <= io_alloc_bits_task_param;
        req_sourceId <= io_alloc_bits_task_sourceId;
        req_fromL2pft <= io_alloc_bits_task_fromL2pft;
        req_reqSource <= io_alloc_bits_task_reqSource;
        req_snpHitRelease <= io_alloc_bits_task_snpHitRelease;
        req_snpHitReleaseWithData <= io_alloc_bits_task_snpHitReleaseWithData;
        req_snpHitReleaseIdx <= io_alloc_bits_task_snpHitReleaseIdx;
        req_srcID <= io_alloc_bits_task_srcID;
        req_txnID <= io_alloc_bits_task_txnID;
        req_fwdNID <= io_alloc_bits_task_fwdNID;
        req_fwdTxnID <= io_alloc_bits_task_fwdTxnID;
        req_chiOpcode <= io_alloc_bits_task_chiOpcode;
        req_retToSrc <= io_alloc_bits_task_retToSrc;
        dirResult_set <= io_alloc_bits_dirResult_set;
      end
      req_aliasTask <=
        ~_GEN_26 & (io_alloc_valid ? io_alloc_bits_task_aliasTask : req_aliasTask);
      dirResult_hit <=
        ~_GEN_26 & (io_alloc_valid ? io_alloc_bits_dirResult_hit : dirResult_hit);
      if (_GEN_21) begin
        dirResult_tag <= io_replResp_bits_tag;
        dirResult_meta_alias <= io_replResp_bits_meta_alias;
        dirResult_meta_prefetch <= io_replResp_bits_meta_prefetch;
        dirResult_meta_accessed <= io_replResp_bits_meta_accessed;
      end
      else if (io_alloc_valid) begin
        dirResult_tag <= io_alloc_bits_dirResult_tag;
        dirResult_meta_alias <= io_alloc_bits_dirResult_meta_alias;
        dirResult_meta_prefetch <= io_alloc_bits_dirResult_meta_prefetch;
        dirResult_meta_accessed <= io_alloc_bits_dirResult_meta_accessed;
      end
      if (_GEN_21 | _GEN_20)
        dirResult_way <= io_replResp_bits_way;
      else if (io_alloc_valid)
        dirResult_way <= io_alloc_bits_dirResult_way;
      dirResult_meta_dirty <=
        ~(nestedwb_hit_match & (io_nestedwb_b_toN | io_nestedwb_b_toB))
        & (nestedwb_match
             ? ~io_nestedwb_b_inv_dirty & (io_nestedwb_c_set_dirty | _GEN_22)
             : _GEN_22);
      if (nestedwb_hit_match) begin
        if (io_nestedwb_b_toN)
          dirResult_meta_state <= 2'h0;
        else if (io_nestedwb_b_toB)
          dirResult_meta_state <= {1'h0, |dirResult_meta_state};
        else if (_GEN_25)
          dirResult_meta_state <= 2'h0;
        else if (_GEN_21)
          dirResult_meta_state <= io_replResp_bits_meta_state;
        else if (_GEN_9) begin
          if (io_alloc_valid)
            dirResult_meta_state <= io_alloc_bits_dirResult_meta_state;
        end
        else
          dirResult_meta_state <= 2'h0;
      end
      else if (_GEN_25)
        dirResult_meta_state <= 2'h0;
      else if (_GEN_21)
        dirResult_meta_state <= io_replResp_bits_meta_state;
      else if (_GEN_9) begin
        if (io_alloc_valid)
          dirResult_meta_state <= io_alloc_bits_dirResult_meta_state;
      end
      else
        dirResult_meta_state <= 2'h0;
      dirResult_meta_clients <=
        ~_GEN_26
        & (_GEN_21
             ? io_replResp_bits_meta_clients
             : io_alloc_valid
                 ? io_alloc_bits_dirResult_meta_clients
                 : dirResult_meta_clients);
      state_s_acquire <=
        _acquire_ts_T
        | (io_alloc_valid ? io_alloc_bits_state_s_acquire : state_s_acquire);
      state_s_rprobe <=
        ~_GEN_24
        & (_probe_ts_T
           | (io_alloc_valid ? io_alloc_bits_state_s_rprobe : state_s_rprobe));
      state_s_pprobe <=
        _probe_ts_T | (io_alloc_valid ? io_alloc_bits_state_s_pprobe : state_s_pprobe);
      state_s_release <=
        ~_GEN_23
        & (_GEN_8
             ? io_alloc_valid | state_s_release
             : release_valid1 | io_alloc_valid | state_s_release);
      state_s_probeack <=
        io_tasks_mainpipe_ready & ~(mp_grant_valid | release_valid1 | mp_cbwrdata_valid)
        & mp_probeack_valid
        | (io_alloc_valid ? io_alloc_bits_state_s_probeack : state_s_probeack);
      state_s_refill <=
        ~_GEN_20
        & (_GEN_7 | (io_alloc_valid ? io_alloc_bits_state_s_refill : state_s_refill));
      state_s_retry <= ~_GEN_20 & (_GEN_7 | io_alloc_valid | state_s_retry);
      state_w_rprobeackfirst <=
        ~_GEN_24
        & (_GEN_11
           | (io_alloc_valid
                ? io_alloc_bits_state_w_rprobeackfirst
                : state_w_rprobeackfirst));
      state_w_rprobeacklast <=
        ~_GEN_24
        & (_GEN_11
             ? state_w_rprobeacklast | io_resps_sinkC_bits_last
             : io_alloc_valid
                 ? io_alloc_bits_state_w_rprobeacklast
                 : state_w_rprobeacklast);
      state_w_pprobeackfirst <=
        _GEN_11
        | (io_alloc_valid
             ? io_alloc_bits_state_w_pprobeackfirst
             : state_w_pprobeackfirst);
      if (_GEN_11) begin
        state_w_pprobeacklast <= state_w_pprobeacklast | io_resps_sinkC_bits_last;
        state_w_pprobeack <= state_w_pprobeack | ~(|req_off) | io_resps_sinkC_bits_last;
      end
      else if (io_alloc_valid) begin
        state_w_pprobeacklast <= io_alloc_bits_state_w_pprobeacklast;
        state_w_pprobeack <= io_alloc_bits_state_w_pprobeack;
      end
      state_w_grantfirst <=
        io_resps_rxrsp_valid & _GEN_13
          ? ~state_w_grant | _GEN_12 | _GEN_4
          : _GEN_12 | _GEN_4;
      state_w_grantlast <=
        _GEN_14
        | (_GEN_12
             ? state_w_grantfirst
             : io_alloc_valid ? io_alloc_bits_state_w_grantlast : state_w_grantlast);
      state_w_grant <=
        _GEN_14
        | (_GEN_12
             ? ~(|req_off) | state_w_grantfirst
             : io_alloc_valid ? io_alloc_bits_state_w_grant : state_w_grant);
      state_w_releaseack <=
        ~_GEN_23
        & (io_resps_rxrsp_valid & (_GEN_15 | _GEN_13 & ~state_w_releaseack)
           | io_alloc_valid | state_w_releaseack);
      state_w_replResp <=
        ~_GEN_26
        & (_GEN_21
           | (io_alloc_valid ? io_alloc_bits_state_w_replResp : state_w_replResp));
      state_s_compack <=
        io_tasks_txrsp_ready & io_tasks_txrsp_valid_0
        | (io_alloc_valid ? io_alloc_bits_state_s_compack : state_s_compack);
      state_s_cbwrdata <=
        _GEN_8
          ? _GEN_6
          : release_valid1
              ? ~(dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty)
              : mp_cbwrdata_valid | _GEN_6;
      state_s_reissue <=
        ~_GEN_19 & (_acquire_ts_T & ~state_s_reissue | io_alloc_valid | state_s_reissue);
      state_s_dct <=
        io_tasks_mainpipe_ready & ~(mp_grant_valid | release_valid1 | _GEN_1)
        & mp_dct_valid | (io_alloc_valid ? io_alloc_bits_state_s_dct : state_s_dct);
      if (_GEN_20 & _mp_grant_valid_T)
        retryTimes <= 2'(retryTimes + 2'h1);
      else if (io_alloc_valid)
        retryTimes <= 2'h0;
      if (_GEN_20)
        backoffTimer <= 5'h0;
      else if (pending_grant_valid & backoffTimer < 5'h14 & (&retryTimes))
        backoffTimer <= 5'(backoffTimer + 5'h1);
      else if (io_alloc_valid)
        backoffTimer <= 5'h0;
      if (io_resps_rxrsp_valid & (_GEN_17 | _GEN_16))
        srcid <= io_resps_rxrsp_bits_srcID;
      else if (io_alloc_valid)
        srcid <= 7'h0;
      if (_GEN_12)
        homenid <= io_resps_rxdat_bits_homeNID;
      if (io_resps_rxrsp_valid & _GEN_16)
        dbid <= io_resps_rxrsp_bits_dbID;
      else if (_GEN_12)
        dbid <= io_resps_rxdat_bits_dbID;
      else if (io_alloc_valid)
        dbid <= 8'h0;
      if (_GEN_18)
        pcrdtype <= io_resps_rxrsp_bits_pCrdType;
      else if (io_alloc_valid)
        pcrdtype <= 4'h0;
      gotRetryAck <=
        _GEN_18 | (_acquire_ts_T ? ~_GEN_5 & gotRetryAck : ~io_alloc_valid & gotRetryAck);
      gotPCrdGrant <=
        _GEN_19
        | (_acquire_ts_T ? ~_GEN_5 & gotPCrdGrant : ~io_alloc_valid & gotPCrdGrant);
      mergeA <= io_aMergeTask_valid | ~io_alloc_valid & mergeA;
      if (io_aMergeTask_valid) begin
        mp_grant_task_merge_task_r_off <= io_aMergeTask_bits_off;
        mp_grant_task_merge_task_r_alias <= io_aMergeTask_bits_alias;
        mp_grant_task_merge_task_r_vaddr <= io_aMergeTask_bits_vaddr;
        mp_grant_task_merge_task_r_isKeyword <= io_aMergeTask_bits_isKeyword;
        mp_grant_task_merge_task_r_opcode <= io_aMergeTask_bits_opcode;
        mp_grant_task_merge_task_r_param <= io_aMergeTask_bits_param;
        mp_grant_task_merge_task_r_sourceId <= io_aMergeTask_bits_sourceId;
      end
      io_msInfo_bits_blockRefill_REG <= ~state_s_release;
      io_msInfo_bits_blockRefill_REG_1 <= ~state_s_release;
      io_msInfo_bits_blockRefill_REG_2 <= io_msInfo_bits_blockRefill_REG_1;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:23];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h18; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        gotT = _RANDOM[5'h0][0];
        gotDirty = _RANDOM[5'h0][1];
        gotGrantData = _RANDOM[5'h0][2];
        probeDirty = _RANDOM[5'h0][3];
        probeGotN = _RANDOM[5'h0][4];
        req_valid = _RANDOM[5'h2][5];
        req_channel = _RANDOM[5'h2][8:6];
        req_set = _RANDOM[5'h2][20:12];
        req_tag = {_RANDOM[5'h2][31:21], _RANDOM[5'h3][7:0]};
        req_off = _RANDOM[5'h3][13:8];
        req_alias = _RANDOM[5'h3][14];
        req_isKeyword = _RANDOM[5'h4][16];
        req_opcode = _RANDOM[5'h4][19:17];
        req_param = _RANDOM[5'h4][22:20];
        req_sourceId = {_RANDOM[5'h4][31:26], _RANDOM[5'h5][0]};
        req_aliasTask = _RANDOM[5'h5][13];
        req_fromL2pft = _RANDOM[5'h5][16];
        req_reqSource = _RANDOM[5'h6][15:12];
        req_snpHitRelease = _RANDOM[5'h8][17];
        req_snpHitReleaseWithData = _RANDOM[5'h8][18];
        req_snpHitReleaseIdx = _RANDOM[5'h8][26:19];
        req_srcID = _RANDOM[5'h9][8:2];
        req_txnID = _RANDOM[5'h9][16:9];
        req_fwdNID = _RANDOM[5'hA][6:0];
        req_fwdTxnID = _RANDOM[5'hA][14:7];
        req_chiOpcode = _RANDOM[5'hA][20:15];
        req_retToSrc = _RANDOM[5'hA][31];
        dirResult_hit = _RANDOM[5'hB][6];
        dirResult_tag = _RANDOM[5'hB][25:7];
        dirResult_set = {_RANDOM[5'hB][31:26], _RANDOM[5'hC][2:0]};
        dirResult_way = _RANDOM[5'hC][5:3];
        dirResult_meta_dirty = _RANDOM[5'hC][6];
        dirResult_meta_state = _RANDOM[5'hC][8:7];
        dirResult_meta_clients = _RANDOM[5'hC][9];
        dirResult_meta_alias = _RANDOM[5'hC][10];
        dirResult_meta_prefetch = _RANDOM[5'hC][11];
        dirResult_meta_accessed = _RANDOM[5'hC][15];
        state_s_acquire = _RANDOM[5'hC][28];
        state_s_rprobe = _RANDOM[5'hC][29];
        state_s_pprobe = _RANDOM[5'hC][30];
        state_s_release = _RANDOM[5'hC][31];
        state_s_probeack = _RANDOM[5'hD][0];
        state_s_refill = _RANDOM[5'hD][1];
        state_s_retry = _RANDOM[5'hD][2];
        state_w_rprobeackfirst = _RANDOM[5'hD][3];
        state_w_rprobeacklast = _RANDOM[5'hD][4];
        state_w_pprobeackfirst = _RANDOM[5'hD][5];
        state_w_pprobeacklast = _RANDOM[5'hD][6];
        state_w_pprobeack = _RANDOM[5'hD][7];
        state_w_grantfirst = _RANDOM[5'hD][8];
        state_w_grantlast = _RANDOM[5'hD][9];
        state_w_grant = _RANDOM[5'hD][10];
        state_w_releaseack = _RANDOM[5'hD][11];
        state_w_replResp = _RANDOM[5'hD][12];
        state_s_compack = _RANDOM[5'hD][13];
        state_s_cbwrdata = _RANDOM[5'hD][14];
        state_s_reissue = _RANDOM[5'hD][15];
        state_s_dct = _RANDOM[5'hD][16];
        retryTimes = _RANDOM[5'hD][18:17];
        backoffTimer = _RANDOM[5'hD][23:19];
        srcid = _RANDOM[5'hD][30:24];
        homenid = {_RANDOM[5'hD][31], _RANDOM[5'hE][5:0]};
        dbid = _RANDOM[5'hE][13:6];
        pcrdtype = _RANDOM[5'hE][17:14];
        gotRetryAck = _RANDOM[5'hE][18];
        gotPCrdGrant = _RANDOM[5'hE][19];
        mergeA = _RANDOM[5'hE][20];
        mp_grant_task_merge_task_r_off = _RANDOM[5'hF][28:23];
        mp_grant_task_merge_task_r_alias = _RANDOM[5'hF][29];
        mp_grant_task_merge_task_r_vaddr = {_RANDOM[5'hF][31:30], _RANDOM[5'h10][30:0]};
        mp_grant_task_merge_task_r_isKeyword = _RANDOM[5'h10][31];
        mp_grant_task_merge_task_r_opcode = _RANDOM[5'h11][2:0];
        mp_grant_task_merge_task_r_param = _RANDOM[5'h11][5:3];
        mp_grant_task_merge_task_r_sourceId = _RANDOM[5'h11][15:9];
        io_msInfo_bits_blockRefill_REG = _RANDOM[5'h17][21];
        io_msInfo_bits_blockRefill_REG_1 = _RANDOM[5'h17][22];
        io_msInfo_bits_blockRefill_REG_2 = _RANDOM[5'h17][23];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        gotT = 1'h0;
        gotDirty = 1'h0;
        gotGrantData = 1'h0;
        probeDirty = 1'h0;
        probeGotN = 1'h0;
        req_valid = 1'h0;
        req_channel = 3'h0;
        req_set = 9'h0;
        req_tag = 19'h0;
        req_off = 6'h0;
        req_alias = 1'h0;
        req_isKeyword = 1'h0;
        req_opcode = 3'h0;
        req_param = 3'h0;
        req_sourceId = 7'h0;
        req_aliasTask = 1'h0;
        req_fromL2pft = 1'h0;
        req_reqSource = 4'h0;
        req_snpHitRelease = 1'h0;
        req_snpHitReleaseWithData = 1'h0;
        req_snpHitReleaseIdx = 8'h0;
        req_srcID = 7'h0;
        req_txnID = 8'h0;
        req_fwdNID = 7'h0;
        req_fwdTxnID = 8'h0;
        req_chiOpcode = 6'h0;
        req_retToSrc = 1'h0;
        dirResult_hit = 1'h0;
        dirResult_tag = 19'h0;
        dirResult_set = 9'h0;
        dirResult_way = 3'h0;
        dirResult_meta_dirty = 1'h0;
        dirResult_meta_state = 2'h0;
        dirResult_meta_clients = 1'h0;
        dirResult_meta_alias = 1'h0;
        dirResult_meta_prefetch = 1'h0;
        dirResult_meta_accessed = 1'h0;
        state_s_acquire = 1'h1;
        state_s_rprobe = 1'h1;
        state_s_pprobe = 1'h1;
        state_s_release = 1'h1;
        state_s_probeack = 1'h1;
        state_s_refill = 1'h1;
        state_s_retry = 1'h1;
        state_w_rprobeackfirst = 1'h1;
        state_w_rprobeacklast = 1'h1;
        state_w_pprobeackfirst = 1'h1;
        state_w_pprobeacklast = 1'h1;
        state_w_pprobeack = 1'h1;
        state_w_grantfirst = 1'h1;
        state_w_grantlast = 1'h1;
        state_w_grant = 1'h1;
        state_w_releaseack = 1'h1;
        state_w_replResp = 1'h1;
        state_s_compack = 1'h1;
        state_s_cbwrdata = 1'h1;
        state_s_reissue = 1'h1;
        state_s_dct = 1'h1;
        retryTimes = 2'h0;
        backoffTimer = 5'h0;
        srcid = 7'h0;
        homenid = 7'h0;
        dbid = 8'h0;
        pcrdtype = 4'h0;
        gotRetryAck = 1'h0;
        gotPCrdGrant = 1'h0;
        mergeA = 1'h0;
        mp_grant_task_merge_task_r_off = 6'h0;
        mp_grant_task_merge_task_r_alias = 1'h0;
        mp_grant_task_merge_task_r_vaddr = 33'h0;
        mp_grant_task_merge_task_r_isKeyword = 1'h0;
        mp_grant_task_merge_task_r_opcode = 3'h0;
        mp_grant_task_merge_task_r_param = 3'h0;
        mp_grant_task_merge_task_r_sourceId = 7'h0;
        io_msInfo_bits_blockRefill_REG = 1'h0;
        io_msInfo_bits_blockRefill_REG_1 = 1'h0;
        io_msInfo_bits_blockRefill_REG_2 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_status_valid = req_valid;
  assign io_status_bits_set = req_set;
  assign io_status_bits_reqTag = req_tag;
  assign io_status_bits_metaTag = dirResult_tag;
  assign io_status_bits_needsRepl = ~state_s_release;
  assign io_status_bits_w_c_resp =
    ~state_w_rprobeacklast | ~state_w_pprobeacklast | ~state_w_pprobeack;
  assign io_msInfo_valid = req_valid;
  assign io_msInfo_bits_channel = req_channel;
  assign io_msInfo_bits_set = req_set;
  assign io_msInfo_bits_way = dirResult_way;
  assign io_msInfo_bits_reqTag = req_tag;
  assign io_msInfo_bits_willFree = will_free;
  assign io_msInfo_bits_aliasTask = req_aliasTask;
  assign io_msInfo_bits_needRelease = ~state_w_releaseack;
  assign io_msInfo_bits_blockRefill =
    ~state_s_release | io_msInfo_bits_blockRefill_REG | io_msInfo_bits_blockRefill_REG_2;
  assign io_msInfo_bits_metaTag = dirResult_tag;
  assign io_msInfo_bits_metaState = dirResult_meta_state;
  assign io_msInfo_bits_dirHit = dirResult_hit;
  assign io_msInfo_bits_isAcqOrPrefetch = req_acquire | req_prefetch;
  assign io_msInfo_bits_isPrefetch = req_prefetch;
  assign io_msInfo_bits_param = req_param;
  assign io_msInfo_bits_mergeA = mergeA;
  assign io_msInfo_bits_w_grantfirst = state_w_grantfirst;
  assign io_msInfo_bits_s_refill = state_s_refill;
  assign io_msInfo_bits_w_releaseack = state_w_releaseack;
  assign io_msInfo_bits_w_replResp = state_w_replResp;
  assign io_msInfo_bits_w_rprobeacklast = state_w_rprobeacklast;
  assign io_msInfo_bits_replaceData =
    dirResult_meta_state[1] & dirResult_meta_dirty | probeDirty;
  assign io_tasks_txreq_valid = io_tasks_txreq_valid_0;
  assign io_tasks_txreq_bits_tgtID = state_s_reissue ? 7'h0 : srcid;
  assign io_tasks_txreq_bits_txnID = io_id;
  assign io_tasks_txreq_bits_opcode =
    release_valid2
      ? (a_task_isWriteBackFull ? 6'h1B : 6'hD)
      : (&req_opcode) & _mp_grant_task_mp_grant_param_T_6
          ? 6'hC
          : req_needT ? 6'h7 : 6'h26;
  assign io_tasks_txreq_bits_addr =
    {14'h0, release_valid2 ? dirResult_tag : req_tag, req_set, 6'h0};
  assign io_tasks_txreq_bits_allowRetry = state_s_reissue;
  assign io_tasks_txreq_bits_pCrdType = state_s_reissue ? 4'h0 : pcrdtype;
  assign io_tasks_txreq_bits_memAttr_allocate =
    ~(release_valid2 & ~a_task_isWriteBackFull);
  assign io_tasks_txreq_bits_expCompAck = ~release_valid2;
  assign io_tasks_txrsp_valid = io_tasks_txrsp_valid_0;
  assign io_tasks_txrsp_bits_tgtID =
    (&req_opcode) & _mp_grant_task_mp_grant_param_T_6 ? srcid : homenid;
  assign io_tasks_txrsp_bits_txnID = dbid;
  assign io_tasks_source_b_valid = io_tasks_source_b_valid_0;
  assign io_tasks_source_b_bits_tag = dirResult_tag;
  assign io_tasks_source_b_bits_set = dirResult_set;
  assign io_tasks_source_b_bits_param =
    state_s_pprobe
      ? (_mp_grant_task_mp_grant_useProbeData_T & _b_task_io_tasks_source_b_bits_param_T_4
           ? 2'h1
           : 2'h2)
      : snpToB ? 2'h1 : {snpToN, 1'h0};
  assign io_tasks_source_b_bits_alias = dirResult_meta_alias;
  assign io_tasks_mainpipe_valid =
    release_valid1 | mp_probeack_valid | mp_grant_valid | mp_cbwrdata_valid
    | mp_dct_valid;
  assign io_tasks_mainpipe_bits_channel = req_channel;
  assign io_tasks_mainpipe_bits_txChannel =
    _io_tasks_mainpipe_bits_T
      ? {2'h0, ~mp_grant_valid}
      : mp_cbwrdata_valid | ~mp_probeack_valid | doRespData ? 3'h4 : 3'h2;
  assign io_tasks_mainpipe_bits_set = req_set;
  assign io_tasks_mainpipe_bits_tag =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid ? req_tag : dirResult_tag)
      : mp_cbwrdata_valid ? dirResult_tag : req_tag;
  assign io_tasks_mainpipe_bits_off =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid ? req_off : 6'h0)
      : mp_cbwrdata_valid ? 6'h0 : req_off;
  assign io_tasks_mainpipe_bits_alias = _GEN_2 & mp_grant_alias;
  assign io_tasks_mainpipe_bits_isKeyword = req_isKeyword;
  assign io_tasks_mainpipe_bits_opcode = _GEN_2 ? _GEN[req_opcode] : 3'h0;
  assign io_tasks_mainpipe_bits_param =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid
           ? (_mp_grant_task_aliasFinal_T | _mp_grant_task_mp_grant_param_T_6
              | req_param == 3'h2
                ? 3'h0
                : req_param == 3'h0 ? _GEN_0 : req_param)
           : dirResult_meta_state[1] ? 3'h1 : 3'h2)
      : 3'h0;
  assign io_tasks_mainpipe_bits_size = _GEN_2 ? 3'h0 : 3'h6;
  assign io_tasks_mainpipe_bits_sourceId = _GEN_2 ? req_sourceId : 7'h0;
  assign io_tasks_mainpipe_bits_mshrId = io_id;
  assign io_tasks_mainpipe_bits_aliasTask = _GEN_2 & req_aliasTask;
  assign io_tasks_mainpipe_bits_useProbeData =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid
        & (_mp_grant_task_mp_grant_useProbeData_T | req_aliasTask
           & ~(_mp_grant_task_mp_grant_useProbeData_T_1 & req_needT))
      : ~mp_cbwrdata_valid;
  assign io_tasks_mainpipe_bits_mshrRetry = _GEN_2 & ~state_s_retry;
  assign io_tasks_mainpipe_bits_fromL2pft = _GEN_2 & req_fromL2pft;
  assign io_tasks_mainpipe_bits_dirty =
    ~_GEN_3
    & (mp_probeack_valid
         ? dirResult_meta_dirty & (|dirResult_meta_state) | probeDirty
         : dirResult_meta_dirty & (|dirResult_meta_state) | probeDirty);
  assign io_tasks_mainpipe_bits_way = dirResult_way;
  assign io_tasks_mainpipe_bits_meta_dirty =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid
        & (gotDirty | dirResult_hit & _mp_grant_task_mp_grant_aMergeTask_meta_x12_T)
      : ~mp_cbwrdata_valid & mp_probeack_valid
        & (~snpToN & ~snpToB & req_chiOpcode != 6'h8 & dirResult_meta_dirty
           | (_mp_probeack_task_mp_probeack_meta_x5_T_6
              | _mp_probeack_task_mp_probeack_meta_x5_T_7) & probeDirty);
  assign io_tasks_mainpipe_bits_meta_state =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid
           ? (req_get
                ? {dirResult_hit ? dirResult_meta_state[1] : req_promoteT, 1'h1}
                : req_promoteT | req_needT ? {1'h1, req_prefetch} : 2'h1)
           : 2'h0)
      : mp_cbwrdata_valid | ~mp_probeack_valid | snpToN
          ? 2'h0
          : snpToB ? 2'h1 : dirResult_meta_state;
  assign io_tasks_mainpipe_bits_meta_clients =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid
        & (req_prefetch
             ? dirResult_hit & dirResult_meta_clients
             : ~(req_get & (~dirResult_hit | ~dirResult_meta_clients | probeGotN)))
      : ~mp_cbwrdata_valid & mp_probeack_valid & ~probeGotN & ~snpToN;
  assign io_tasks_mainpipe_bits_meta_alias =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid & mp_grant_alias
      : ~mp_cbwrdata_valid & mp_probeack_valid & dirResult_meta_alias;
  assign io_tasks_mainpipe_bits_meta_prefetch =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid & (req_prefetch | dirResult_hit & dirResult_meta_prefetch)
      : ~mp_cbwrdata_valid & mp_probeack_valid & ~snpToN & dirResult_meta_prefetch;
  assign io_tasks_mainpipe_bits_meta_prefetchSrc =
    _GEN_2
      ? (req_reqSource == 4'h8
           ? 3'h2
           : req_reqSource == 4'h9
               ? 3'h3
               : req_reqSource == 4'hA
                   ? 3'h1
                   : req_reqSource == 4'hD
                       ? 3'h6
                       : req_reqSource == 4'hB
                           ? 3'h4
                           : req_reqSource == 4'hC ? 3'h5 : 3'h0)
      : 3'h0;
  assign io_tasks_mainpipe_bits_meta_accessed =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid & mp_grant_task_mp_grant_meta_entry_accessed
      : ~mp_cbwrdata_valid & mp_probeack_valid & ~snpToN & dirResult_meta_accessed;
  assign io_tasks_mainpipe_bits_metaWen =
    _io_tasks_mainpipe_bits_T
      ? mp_grant_valid
      : ~mp_cbwrdata_valid & mp_probeack_valid & ~req_snpHitRelease;
  assign io_tasks_mainpipe_bits_tagWen = _GEN_2 & ~dirResult_hit;
  assign io_tasks_mainpipe_bits_dsWen =
    _io_tasks_mainpipe_bits_T
      ? ~mp_grant_valid | gotGrantData | probeDirty & (req_get | req_aliasTask)
      : ~mp_cbwrdata_valid & mp_probeack_valid & ~snpToN & probeDirty;
  assign io_tasks_mainpipe_bits_replTask =
    _io_tasks_mainpipe_bits_T & (~mp_grant_valid | ~dirResult_hit & ~state_w_replResp);
  assign io_tasks_mainpipe_bits_reqSource = req_reqSource;
  assign io_tasks_mainpipe_bits_mergeA = _GEN_2 & (mergeA | io_aMergeTask_valid);
  assign io_tasks_mainpipe_bits_aMergeTask_off =
    _GEN_2
      ? (io_aMergeTask_valid ? io_aMergeTask_bits_off : mp_grant_task_merge_task_r_off)
      : 6'h0;
  assign io_tasks_mainpipe_bits_aMergeTask_alias = _GEN_2 & mp_grant_aMergeTask_alias;
  assign io_tasks_mainpipe_bits_aMergeTask_vaddr =
    _GEN_2
      ? (io_aMergeTask_valid
           ? io_aMergeTask_bits_vaddr
           : mp_grant_task_merge_task_r_vaddr)
      : 33'h0;
  assign io_tasks_mainpipe_bits_aMergeTask_isKeyword =
    _GEN_2
    & (io_aMergeTask_valid
         ? io_aMergeTask_bits_isKeyword
         : mp_grant_task_merge_task_r_isKeyword);
  assign io_tasks_mainpipe_bits_aMergeTask_opcode =
    _GEN_2 ? _GEN[mp_grant_task_merge_task_opcode] : 3'h0;
  assign io_tasks_mainpipe_bits_aMergeTask_param =
    ~_GEN_2 | mp_grant_task_merge_task_param == 3'h1
    | mp_grant_task_merge_task_param == 3'h2
      ? 3'h0
      : mp_grant_task_merge_task_param == 3'h0 ? _GEN_0 : mp_grant_task_merge_task_param;
  assign io_tasks_mainpipe_bits_aMergeTask_sourceId =
    _GEN_2
      ? (io_aMergeTask_valid
           ? io_aMergeTask_bits_sourceId
           : mp_grant_task_merge_task_r_sourceId)
      : 7'h0;
  assign io_tasks_mainpipe_bits_aMergeTask_meta_dirty =
    _GEN_2 & (gotDirty | dirResult_hit & _mp_grant_task_mp_grant_aMergeTask_meta_x12_T);
  assign io_tasks_mainpipe_bits_aMergeTask_meta_state =
    _GEN_2
      ? (req_promoteT | ~(mp_grant_task_merge_task_opcode[2])
         | mp_grant_task_merge_task_opcode == 3'h5
         & mp_grant_task_merge_task_param == 3'h1
         | (mp_grant_task_merge_task_opcode == 3'h6 | (&mp_grant_task_merge_task_opcode))
         & (|mp_grant_task_merge_task_param)
           ? 2'h2
           : 2'h1)
      : 2'h0;
  assign io_tasks_mainpipe_bits_aMergeTask_meta_clients =
    _io_tasks_mainpipe_bits_T & mp_grant_valid;
  assign io_tasks_mainpipe_bits_aMergeTask_meta_alias =
    _GEN_2 & mp_grant_aMergeTask_alias;
  assign io_tasks_mainpipe_bits_aMergeTask_meta_accessed =
    _io_tasks_mainpipe_bits_T & mp_grant_valid;
  assign io_tasks_mainpipe_bits_snpHitRelease = ~_GEN_3 & req_snpHitRelease;
  assign io_tasks_mainpipe_bits_snpHitReleaseWithData =
    ~_GEN_3 & req_snpHitReleaseWithData;
  assign io_tasks_mainpipe_bits_snpHitReleaseIdx = _GEN_3 ? 8'h0 : req_snpHitReleaseIdx;
  assign io_tasks_mainpipe_bits_tgtID =
    _io_tasks_mainpipe_bits_T
      ? 7'h0
      : mp_cbwrdata_valid ? srcid : mp_probeack_valid ? req_srcID : req_fwdNID;
  assign io_tasks_mainpipe_bits_txnID =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid ? 8'h0 : io_id)
      : mp_cbwrdata_valid ? dbid : mp_probeack_valid ? req_txnID : req_fwdTxnID;
  assign io_tasks_mainpipe_bits_homeNID =
    _io_tasks_mainpipe_bits_T | _GEN_1 ? 7'h0 : req_srcID;
  assign io_tasks_mainpipe_bits_dbID = _GEN_3 ? 8'h0 : req_txnID;
  assign io_tasks_mainpipe_bits_chiOpcode =
    _io_tasks_mainpipe_bits_T
      ? (mp_grant_valid ? 6'h0 : mp_release_task_isWriteBackFull ? 6'h1B : 6'hD)
      : mp_cbwrdata_valid
          ? 6'h2
          : mp_probeack_valid
              ? {2'h0,
                 (&_mp_probeack_task_mp_probeack_chiOpcode_T_1)
                   ? 4'h6
                   : _mp_probeack_task_mp_probeack_chiOpcode_T_1 == 2'h1
                       ? 4'h1
                       : {_mp_probeack_task_mp_probeack_chiOpcode_T_1 == 2'h2, 3'h1}}
              : 6'h4;
  assign io_tasks_mainpipe_bits_resp =
    _io_tasks_mainpipe_bits_T
      ? 3'h0
      : mp_cbwrdata_valid
          ? ((|dirResult_meta_state) ? 3'h6 : 3'h0)
          : mp_probeack_valid
              ? (_mp_probeack_task_mp_probeack_resp_T
                   ? 3'h4
                   : (snpToN | snpToB
                        ? {2'h0, ~snpToN}
                        : (_mp_probeack_task_mp_probeack_meta_x5_T_6
                           | _mp_probeack_task_mp_probeack_meta_x5_T_7
                           | req_chiOpcode == 6'hB | req_chiOpcode == 6'hC
                             ? _mp_grant_task_mp_grant_aMergeTask_meta_x12_T
                             : dirResult_meta_state[1])
                            ? 3'h2
                            : {1'h0,
                               _metaChi_T == 3'h2 | _metaChi_T == 3'h3
                                 | _metaChi_T == 3'h6 | (&_metaChi_T),
                               _metaChi_T == 3'h1})
                     | {_mp_grant_task_mp_grant_aMergeTask_meta_x12_T
                          & (snpToB | _respPassDirty_T_1 | _respPassDirty_T_3
                             | _respPassDirty_T_5 | _respPassDirty_T_7) & doRespData,
                        2'h0})
              : fwdCacheState | _mp_dct_task_mp_dct_resp_T;
  assign io_tasks_mainpipe_bits_fwdState =
    _GEN_3 | ~mp_probeack_valid ? 3'h0 : fwdCacheState | _mp_dct_task_mp_dct_resp_T;
  assign io_tasks_mainpipe_bits_retToSrc =
    _io_tasks_mainpipe_bits_T
      ? ~mp_grant_valid & req_retToSrc
      : (mp_cbwrdata_valid | mp_probeack_valid) & req_retToSrc;
  assign io_tasks_mainpipe_bits_allowRetry =
    _io_tasks_mainpipe_bits_T & ~mp_grant_valid & state_s_reissue;
  assign io_tasks_mainpipe_bits_memAttr_allocate =
    _io_tasks_mainpipe_bits_T & ~mp_grant_valid & mp_release_task_isWriteBackFull;
  assign io_tasks_mainpipe_bits_memAttr_cacheable =
    _io_tasks_mainpipe_bits_T & ~mp_grant_valid;
  assign io_tasks_mainpipe_bits_memAttr_ewa = _io_tasks_mainpipe_bits_T & ~mp_grant_valid;
  assign io_nestedwbData = nestedwb_match & io_nestedwb_c_set_dirty;
  assign io_waitPCrdInfo_valid = gotRetryAck & ~gotPCrdGrant;
  assign io_waitPCrdInfo_srcID = srcid;
  assign io_waitPCrdInfo_pCrdType = pcrdtype;
endmodule

