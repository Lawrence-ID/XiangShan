// Generated by CIRCT firtool-1.74.0
module Arbiter5_MSHRAcquire(
  output        io_in_0_ready,
  input         io_in_0_valid,
  input  [35:0] io_in_0_bits_acquire_address,
  input  [7:0]  io_in_0_bits_vSetIdx,
  output        io_in_1_ready,
  input         io_in_1_valid,
  input  [35:0] io_in_1_bits_acquire_address,
  input  [7:0]  io_in_1_bits_vSetIdx,
  output        io_in_2_ready,
  input         io_in_2_valid,
  input  [35:0] io_in_2_bits_acquire_address,
  input  [7:0]  io_in_2_bits_vSetIdx,
  output        io_in_3_ready,
  input         io_in_3_valid,
  input  [35:0] io_in_3_bits_acquire_address,
  input  [7:0]  io_in_3_bits_vSetIdx,
  output        io_in_4_ready,
  input         io_in_4_valid,
  input  [3:0]  io_in_4_bits_acquire_source,
  input  [35:0] io_in_4_bits_acquire_address,
  input  [7:0]  io_in_4_bits_vSetIdx,
  input         io_out_ready,
  output        io_out_valid,
  output [3:0]  io_out_bits_acquire_source,
  output [35:0] io_out_bits_acquire_address,
  output [7:0]  io_out_bits_vSetIdx
);

  wire _grant_T = io_in_0_valid | io_in_1_valid;
  wire _grant_T_1 = _grant_T | io_in_2_valid;
  wire _io_out_valid_T = _grant_T_1 | io_in_3_valid;
  assign io_in_0_ready = io_out_ready;
  assign io_in_1_ready = ~io_in_0_valid & io_out_ready;
  assign io_in_2_ready = ~_grant_T & io_out_ready;
  assign io_in_3_ready = ~_grant_T_1 & io_out_ready;
  assign io_in_4_ready = ~_io_out_valid_T & io_out_ready;
  assign io_out_valid = _io_out_valid_T | io_in_4_valid;
  assign io_out_bits_acquire_source =
    io_in_0_valid
      ? 4'h0
      : io_in_1_valid
          ? 4'h1
          : io_in_2_valid ? 4'h2 : io_in_3_valid ? 4'h3 : io_in_4_bits_acquire_source;
  assign io_out_bits_acquire_address =
    io_in_0_valid
      ? io_in_0_bits_acquire_address
      : io_in_1_valid
          ? io_in_1_bits_acquire_address
          : io_in_2_valid
              ? io_in_2_bits_acquire_address
              : io_in_3_valid
                  ? io_in_3_bits_acquire_address
                  : io_in_4_bits_acquire_address;
  assign io_out_bits_vSetIdx =
    io_in_0_valid
      ? io_in_0_bits_vSetIdx
      : io_in_1_valid
          ? io_in_1_bits_vSetIdx
          : io_in_2_valid
              ? io_in_2_bits_vSetIdx
              : io_in_3_valid ? io_in_3_bits_vSetIdx : io_in_4_bits_vSetIdx;
endmodule

