// Generated by CIRCT firtool-1.74.0
module MretEventModule(
  input         valid,
  input         in_mstatus_MPIE,
  input  [1:0]  in_mstatus_MPP,
  input         in_mstatus_MPRV,
  input         in_mstatus_MPV,
  input  [62:0] in_mepc_epc,
  input         in_tcontrol_MPTE,
  output        out_privState_valid,
  output [1:0]  out_privState_bits_PRVM,
  output        out_privState_bits_V,
  output        out_mstatus_valid,
  output        out_mstatus_bits_SIE,
  output        out_mstatus_bits_MIE,
  output        out_mstatus_bits_SPIE,
  output        out_mstatus_bits_UBE,
  output        out_mstatus_bits_MPIE,
  output        out_mstatus_bits_SPP,
  output [1:0]  out_mstatus_bits_VS,
  output [1:0]  out_mstatus_bits_MPP,
  output [1:0]  out_mstatus_bits_FS,
  output [1:0]  out_mstatus_bits_XS,
  output        out_mstatus_bits_MPRV,
  output        out_mstatus_bits_SUM,
  output        out_mstatus_bits_MXR,
  output        out_mstatus_bits_TVM,
  output        out_mstatus_bits_TW,
  output        out_mstatus_bits_TSR,
  output [1:0]  out_mstatus_bits_UXL,
  output [1:0]  out_mstatus_bits_SXL,
  output        out_mstatus_bits_SBE,
  output        out_mstatus_bits_MBE,
  output        out_mstatus_bits_GVA,
  output        out_mstatus_bits_MPV,
  output        out_mstatus_bits_SD,
  output        out_tcontrol_valid,
  output        out_tcontrol_bits_MPTE,
  output        out_tcontrol_bits_MTE,
  output        out_targetPc_valid,
  output [40:0] out_targetPc_bits
);

  assign out_privState_valid = valid;
  assign out_privState_bits_PRVM = in_mstatus_MPP;
  assign out_privState_bits_V = ~(&in_mstatus_MPP) & in_mstatus_MPV;
  assign out_mstatus_valid = valid;
  assign out_mstatus_bits_SIE = 1'h0;
  assign out_mstatus_bits_MIE = in_mstatus_MPIE;
  assign out_mstatus_bits_SPIE = 1'h0;
  assign out_mstatus_bits_UBE = 1'h0;
  assign out_mstatus_bits_MPIE = 1'h1;
  assign out_mstatus_bits_SPP = 1'h0;
  assign out_mstatus_bits_VS = 2'h0;
  assign out_mstatus_bits_MPP = 2'h0;
  assign out_mstatus_bits_FS = 2'h0;
  assign out_mstatus_bits_XS = 2'h0;
  assign out_mstatus_bits_MPRV = (&in_mstatus_MPP) & in_mstatus_MPRV;
  assign out_mstatus_bits_SUM = 1'h0;
  assign out_mstatus_bits_MXR = 1'h0;
  assign out_mstatus_bits_TVM = 1'h0;
  assign out_mstatus_bits_TW = 1'h0;
  assign out_mstatus_bits_TSR = 1'h0;
  assign out_mstatus_bits_UXL = 2'h0;
  assign out_mstatus_bits_SXL = 2'h0;
  assign out_mstatus_bits_SBE = 1'h0;
  assign out_mstatus_bits_MBE = 1'h0;
  assign out_mstatus_bits_GVA = 1'h0;
  assign out_mstatus_bits_MPV = 1'h0;
  assign out_mstatus_bits_SD = 1'h0;
  assign out_tcontrol_valid = valid;
  assign out_tcontrol_bits_MPTE = 1'h0;
  assign out_tcontrol_bits_MTE = in_tcontrol_MPTE;
  assign out_targetPc_valid = valid;
  assign out_targetPc_bits = {in_mepc_epc[39:0], 1'h0};
endmodule

