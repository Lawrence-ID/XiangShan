// Generated by CIRCT firtool-1.74.0
module Arbiter3_CHIREQ(
  input         io_in_0_valid,
  input  [6:0]  io_in_0_bits_tgtID,
  input  [6:0]  io_in_0_bits_srcID,
  input  [7:0]  io_in_0_bits_txnID,
  input  [5:0]  io_in_0_bits_opcode,
  input  [47:0] io_in_0_bits_addr,
  input         io_in_0_bits_allowRetry,
  input  [3:0]  io_in_0_bits_pCrdType,
  input         io_in_0_bits_memAttr_allocate,
  input         io_in_0_bits_memAttr_cacheable,
  input         io_in_0_bits_memAttr_device,
  input         io_in_0_bits_memAttr_ewa,
  input         io_in_0_bits_expCompAck,
  output        io_in_1_ready,
  input         io_in_1_valid,
  input  [6:0]  io_in_1_bits_tgtID,
  input  [6:0]  io_in_1_bits_srcID,
  input  [7:0]  io_in_1_bits_txnID,
  input  [5:0]  io_in_1_bits_opcode,
  input  [47:0] io_in_1_bits_addr,
  input         io_in_1_bits_allowRetry,
  input  [3:0]  io_in_1_bits_pCrdType,
  input         io_in_1_bits_memAttr_allocate,
  input         io_in_1_bits_memAttr_cacheable,
  input         io_in_1_bits_memAttr_device,
  input         io_in_1_bits_memAttr_ewa,
  input         io_in_1_bits_expCompAck,
  output        io_in_2_ready,
  input         io_in_2_valid,
  input  [6:0]  io_in_2_bits_tgtID,
  input  [6:0]  io_in_2_bits_srcID,
  input  [7:0]  io_in_2_bits_txnID,
  input  [5:0]  io_in_2_bits_opcode,
  input  [47:0] io_in_2_bits_addr,
  input         io_in_2_bits_allowRetry,
  input  [3:0]  io_in_2_bits_pCrdType,
  input         io_in_2_bits_memAttr_allocate,
  input         io_in_2_bits_memAttr_cacheable,
  input         io_in_2_bits_memAttr_device,
  input         io_in_2_bits_memAttr_ewa,
  input         io_in_2_bits_expCompAck,
  output        io_out_valid,
  output [6:0]  io_out_bits_tgtID,
  output [6:0]  io_out_bits_srcID,
  output [7:0]  io_out_bits_txnID,
  output [5:0]  io_out_bits_opcode,
  output [47:0] io_out_bits_addr,
  output        io_out_bits_allowRetry,
  output [3:0]  io_out_bits_pCrdType,
  output        io_out_bits_memAttr_allocate,
  output        io_out_bits_memAttr_cacheable,
  output        io_out_bits_memAttr_device,
  output        io_out_bits_memAttr_ewa,
  output        io_out_bits_expCompAck
);

  wire _io_out_valid_T = io_in_0_valid | io_in_1_valid;
  assign io_in_1_ready = ~io_in_0_valid;
  assign io_in_2_ready = ~_io_out_valid_T;
  assign io_out_valid = _io_out_valid_T | io_in_2_valid;
  assign io_out_bits_tgtID =
    io_in_0_valid
      ? io_in_0_bits_tgtID
      : io_in_1_valid ? io_in_1_bits_tgtID : io_in_2_bits_tgtID;
  assign io_out_bits_srcID =
    io_in_0_valid
      ? io_in_0_bits_srcID
      : io_in_1_valid ? io_in_1_bits_srcID : io_in_2_bits_srcID;
  assign io_out_bits_txnID =
    io_in_0_valid
      ? io_in_0_bits_txnID
      : io_in_1_valid ? io_in_1_bits_txnID : io_in_2_bits_txnID;
  assign io_out_bits_opcode =
    io_in_0_valid
      ? io_in_0_bits_opcode
      : io_in_1_valid ? io_in_1_bits_opcode : io_in_2_bits_opcode;
  assign io_out_bits_addr =
    io_in_0_valid
      ? io_in_0_bits_addr
      : io_in_1_valid ? io_in_1_bits_addr : io_in_2_bits_addr;
  assign io_out_bits_allowRetry =
    io_in_0_valid
      ? io_in_0_bits_allowRetry
      : io_in_1_valid ? io_in_1_bits_allowRetry : io_in_2_bits_allowRetry;
  assign io_out_bits_pCrdType =
    io_in_0_valid
      ? io_in_0_bits_pCrdType
      : io_in_1_valid ? io_in_1_bits_pCrdType : io_in_2_bits_pCrdType;
  assign io_out_bits_memAttr_allocate =
    io_in_0_valid
      ? io_in_0_bits_memAttr_allocate
      : io_in_1_valid ? io_in_1_bits_memAttr_allocate : io_in_2_bits_memAttr_allocate;
  assign io_out_bits_memAttr_cacheable =
    io_in_0_valid
      ? io_in_0_bits_memAttr_cacheable
      : io_in_1_valid ? io_in_1_bits_memAttr_cacheable : io_in_2_bits_memAttr_cacheable;
  assign io_out_bits_memAttr_device =
    io_in_0_valid
      ? io_in_0_bits_memAttr_device
      : io_in_1_valid ? io_in_1_bits_memAttr_device : io_in_2_bits_memAttr_device;
  assign io_out_bits_memAttr_ewa =
    io_in_0_valid
      ? io_in_0_bits_memAttr_ewa
      : io_in_1_valid ? io_in_1_bits_memAttr_ewa : io_in_2_bits_memAttr_ewa;
  assign io_out_bits_expCompAck =
    io_in_0_valid
      ? io_in_0_bits_expCompAck
      : io_in_1_valid ? io_in_1_bits_expCompAck : io_in_2_bits_expCompAck;
endmodule

