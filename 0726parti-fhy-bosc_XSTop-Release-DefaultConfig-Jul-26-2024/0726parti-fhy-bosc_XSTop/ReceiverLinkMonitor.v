// Generated by CIRCT firtool-1.74.0
// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS
// Standard header to adapt well known macros for register randomization.
// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM
// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM
// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY
// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module ReceiverLinkMonitor(
  input          clock,
  input          reset,
  input          io_in_txsactive,
  output         io_in_rxsactive,
  input          io_in_tx_linkactivereq,
  output         io_in_tx_linkactiveack,
  input          io_in_tx_req_flitpend,
  input          io_in_tx_req_flitv,
  input  [124:0] io_in_tx_req_flit,
  output         io_in_tx_req_lcrdv,
  input          io_in_tx_rsp_flitpend,
  input          io_in_tx_rsp_flitv,
  input  [50:0]  io_in_tx_rsp_flit,
  output         io_in_tx_rsp_lcrdv,
  input          io_in_tx_dat_flitpend,
  input          io_in_tx_dat_flitv,
  input  [348:0] io_in_tx_dat_flit,
  output         io_in_tx_dat_lcrdv,
  output         io_in_rx_linkactivereq,
  input          io_in_rx_linkactiveack,
  output         io_in_rx_rsp_flitpend,
  output         io_in_rx_rsp_flitv,
  output [50:0]  io_in_rx_rsp_flit,
  input          io_in_rx_rsp_lcrdv,
  output         io_in_rx_dat_flitpend,
  output         io_in_rx_dat_flitv,
  output [348:0] io_in_rx_dat_flit,
  input          io_in_rx_dat_lcrdv,
  output         io_in_rx_snp_flitpend,
  output         io_in_rx_snp_flitv,
  output [87:0]  io_in_rx_snp_flit,
  input          io_in_rx_snp_lcrdv,
  input          io_out_tx_req_ready,
  output         io_out_tx_req_valid,
  output [6:0]   io_out_tx_req_bits_tgtID,
  output [7:0]   io_out_tx_req_bits_txnID,
  output [5:0]   io_out_tx_req_bits_opcode,
  output [2:0]   io_out_tx_req_bits_size,
  output [47:0]  io_out_tx_req_bits_addr,
  output [1:0]   io_out_tx_req_bits_order,
  output         io_out_tx_req_bits_expCompAck,
  input          io_out_tx_rsp_ready,
  output         io_out_tx_rsp_valid,
  output [3:0]   io_out_tx_rsp_bits_opcode,
  input          io_out_tx_dat_ready,
  output         io_out_tx_dat_valid,
  output [2:0]   io_out_tx_dat_bits_opcode,
  output [2:0]   io_out_tx_dat_bits_resp,
  output [1:0]   io_out_tx_dat_bits_dataID,
  output [31:0]  io_out_tx_dat_bits_be,
  output [255:0] io_out_tx_dat_bits_data,
  output         io_out_rx_rsp_ready,
  input          io_out_rx_rsp_valid,
  input  [6:0]   io_out_rx_rsp_bits_srcID,
  input  [7:0]   io_out_rx_rsp_bits_txnID,
  input  [3:0]   io_out_rx_rsp_bits_opcode,
  input  [2:0]   io_out_rx_rsp_bits_resp,
  output         io_out_rx_dat_ready,
  input          io_out_rx_dat_valid,
  input  [6:0]   io_out_rx_dat_bits_srcID,
  input  [7:0]   io_out_rx_dat_bits_txnID,
  input  [6:0]   io_out_rx_dat_bits_homeNID,
  input  [2:0]   io_out_rx_dat_bits_resp,
  input  [1:0]   io_out_rx_dat_bits_dataID,
  input  [255:0] io_out_rx_dat_bits_data,
  output         io_out_rx_snp_ready,
  input          io_out_rx_snp_valid,
  input  [6:0]   io_out_rx_snp_bits_srcID,
  input  [4:0]   io_out_rx_snp_bits_opcode,
  input  [44:0]  io_out_rx_snp_bits_addr
);

  wire            _LCredit2Decoupled_rxdat_io_reclaimLCredit;
  wire            _LCredit2Decoupled_rxrsp_io_reclaimLCredit;
  wire            _LCredit2Decoupled_rxreq_io_reclaimLCredit;
  reg  [1:0]      txState;
  reg  [1:0]      rxState;
  reg             io_in_tx_linkactiveack_REG;
  wire            hetVecWire_0_linkactiveack =
    io_in_tx_linkactiveack_REG
    | ~(_LCredit2Decoupled_rxreq_io_reclaimLCredit
        & _LCredit2Decoupled_rxrsp_io_reclaimLCredit
        & _LCredit2Decoupled_rxdat_io_reclaimLCredit);
  wire [1:0]      _txState_T = {io_in_tx_linkactivereq, hetVecWire_0_linkactiveack};
  wire [1:0]      _rxState_T = {~reset, io_in_rx_linkactiveack};
  wire [3:0][1:0] _GEN = {{2'h2}, {{1'h0, _txState_T == 2'h2}}, {2'h3}, {2'h0}};
  wire [3:0][1:0] _GEN_0 = {{2'h2}, {{1'h0, _rxState_T == 2'h2}}, {2'h3}, {2'h0}};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      txState <= 2'h0;
      rxState <= 2'h0;
    end
    else begin
      txState <= _GEN[_txState_T];
      rxState <= _GEN_0[_rxState_T];
    end
  end // always @(posedge, posedge)
  always @(posedge clock)
    io_in_tx_linkactiveack_REG <= io_in_tx_linkactivereq;
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        txState = _RANDOM[/*Zero width*/ 1'b0][1:0];
        rxState = _RANDOM[/*Zero width*/ 1'b0][3:2];
        io_in_tx_linkactiveack_REG = _RANDOM[/*Zero width*/ 1'b0][4];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        txState = 2'h0;
        rxState = 2'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  LCredit2Decoupled_3 LCredit2Decoupled_rxreq (
    .clock                  (clock),
    .reset                  (reset),
    .io_in_flitpend         (io_in_tx_req_flitpend),
    .io_in_flitv            (io_in_tx_req_flitv),
    .io_in_flit             (io_in_tx_req_flit),
    .io_in_lcrdv            (io_in_tx_req_lcrdv),
    .io_out_ready           (io_out_tx_req_ready),
    .io_out_valid           (io_out_tx_req_valid),
    .io_out_bits_tgtID      (io_out_tx_req_bits_tgtID),
    .io_out_bits_txnID      (io_out_tx_req_bits_txnID),
    .io_out_bits_opcode     (io_out_tx_req_bits_opcode),
    .io_out_bits_size       (io_out_tx_req_bits_size),
    .io_out_bits_addr       (io_out_tx_req_bits_addr),
    .io_out_bits_order      (io_out_tx_req_bits_order),
    .io_out_bits_expCompAck (io_out_tx_req_bits_expCompAck),
    .io_state_state         (txState),
    .io_reclaimLCredit      (_LCredit2Decoupled_rxreq_io_reclaimLCredit)
  );
  LCredit2Decoupled_1 LCredit2Decoupled_rxrsp (
    .clock                (clock),
    .reset                (reset),
    .io_in_flitpend       (io_in_tx_rsp_flitpend),
    .io_in_flitv          (io_in_tx_rsp_flitv),
    .io_in_flit           (io_in_tx_rsp_flit),
    .io_in_lcrdv          (io_in_tx_rsp_lcrdv),
    .io_out_ready         (io_out_tx_rsp_ready),
    .io_out_valid         (io_out_tx_rsp_valid),
    .io_out_bits_qos      (/* unused */),
    .io_out_bits_tgtID    (/* unused */),
    .io_out_bits_srcID    (/* unused */),
    .io_out_bits_txnID    (/* unused */),
    .io_out_bits_opcode   (io_out_tx_rsp_bits_opcode),
    .io_out_bits_respErr  (/* unused */),
    .io_out_bits_resp     (/* unused */),
    .io_out_bits_fwdState (/* unused */),
    .io_out_bits_dbID     (/* unused */),
    .io_out_bits_pCrdType (/* unused */),
    .io_out_bits_traceTag (/* unused */),
    .io_state_state       (txState),
    .io_reclaimLCredit    (_LCredit2Decoupled_rxrsp_io_reclaimLCredit)
  );
  LCredit2Decoupled_2 LCredit2Decoupled_rxdat (
    .clock                (clock),
    .reset                (reset),
    .io_in_flitpend       (io_in_tx_dat_flitpend),
    .io_in_flitv          (io_in_tx_dat_flitv),
    .io_in_flit           (io_in_tx_dat_flit),
    .io_in_lcrdv          (io_in_tx_dat_lcrdv),
    .io_out_ready         (io_out_tx_dat_ready),
    .io_out_valid         (io_out_tx_dat_valid),
    .io_out_bits_qos      (/* unused */),
    .io_out_bits_tgtID    (/* unused */),
    .io_out_bits_srcID    (/* unused */),
    .io_out_bits_txnID    (/* unused */),
    .io_out_bits_homeNID  (/* unused */),
    .io_out_bits_opcode   (io_out_tx_dat_bits_opcode),
    .io_out_bits_respErr  (/* unused */),
    .io_out_bits_resp     (io_out_tx_dat_bits_resp),
    .io_out_bits_fwdState (/* unused */),
    .io_out_bits_dbID     (/* unused */),
    .io_out_bits_ccID     (/* unused */),
    .io_out_bits_dataID   (io_out_tx_dat_bits_dataID),
    .io_out_bits_traceTag (/* unused */),
    .io_out_bits_rsvdc    (/* unused */),
    .io_out_bits_be       (io_out_tx_dat_bits_be),
    .io_out_bits_data     (io_out_tx_dat_bits_data),
    .io_state_state       (txState),
    .io_reclaimLCredit    (_LCredit2Decoupled_rxdat_io_reclaimLCredit)
  );
  Decoupled2LCredit_3 Decoupled2LCredit_txsnp (
    .clock             (clock),
    .reset             (reset),
    .io_in_ready       (io_out_rx_snp_ready),
    .io_in_valid       (io_out_rx_snp_valid),
    .io_in_bits_srcID  (io_out_rx_snp_bits_srcID),
    .io_in_bits_opcode (io_out_rx_snp_bits_opcode),
    .io_in_bits_addr   (io_out_rx_snp_bits_addr),
    .io_out_flitv      (io_in_rx_snp_flitv),
    .io_out_flit       (io_in_rx_snp_flit),
    .io_out_lcrdv      (io_in_rx_snp_lcrdv),
    .io_state_state    (rxState)
  );
  Decoupled2LCredit_1 Decoupled2LCredit_txrsp (
    .clock               (clock),
    .reset               (reset),
    .io_in_ready         (io_out_rx_rsp_ready),
    .io_in_valid         (io_out_rx_rsp_valid),
    .io_in_bits_qos      (4'h0),
    .io_in_bits_tgtID    (7'h0),
    .io_in_bits_srcID    (io_out_rx_rsp_bits_srcID),
    .io_in_bits_txnID    (io_out_rx_rsp_bits_txnID),
    .io_in_bits_opcode   (io_out_rx_rsp_bits_opcode),
    .io_in_bits_respErr  (2'h0),
    .io_in_bits_resp     (io_out_rx_rsp_bits_resp),
    .io_in_bits_fwdState (3'h0),
    .io_in_bits_dbID     (8'h0),
    .io_in_bits_pCrdType (4'h0),
    .io_in_bits_traceTag (1'h0),
    .io_out_flitv        (io_in_rx_rsp_flitv),
    .io_out_flit         (io_in_rx_rsp_flit),
    .io_out_lcrdv        (io_in_rx_rsp_lcrdv),
    .io_state_state      (rxState)
  );
  Decoupled2LCredit_2 Decoupled2LCredit_txdat (
    .clock               (clock),
    .reset               (reset),
    .io_in_ready         (io_out_rx_dat_ready),
    .io_in_valid         (io_out_rx_dat_valid),
    .io_in_bits_qos      (4'h0),
    .io_in_bits_tgtID    (7'h0),
    .io_in_bits_srcID    (io_out_rx_dat_bits_srcID),
    .io_in_bits_txnID    (io_out_rx_dat_bits_txnID),
    .io_in_bits_homeNID  (io_out_rx_dat_bits_homeNID),
    .io_in_bits_opcode   (3'h4),
    .io_in_bits_respErr  (2'h0),
    .io_in_bits_resp     (io_out_rx_dat_bits_resp),
    .io_in_bits_fwdState (3'h0),
    .io_in_bits_dbID     (8'h0),
    .io_in_bits_ccID     (2'h0),
    .io_in_bits_dataID   (io_out_rx_dat_bits_dataID),
    .io_in_bits_traceTag (1'h0),
    .io_in_bits_rsvdc    (4'h0),
    .io_in_bits_be       (32'h0),
    .io_in_bits_data     (io_out_rx_dat_bits_data),
    .io_out_flitv        (io_in_rx_dat_flitv),
    .io_out_flit         (io_in_rx_dat_flit),
    .io_out_lcrdv        (io_in_rx_dat_lcrdv),
    .io_state_state      (rxState)
  );
  assign io_in_rxsactive = 1'h1;
  assign io_in_tx_linkactiveack = hetVecWire_0_linkactiveack;
  assign io_in_rx_linkactivereq = ~reset;
  assign io_in_rx_rsp_flitpend = 1'h1;
  assign io_in_rx_dat_flitpend = 1'h1;
  assign io_in_rx_snp_flitpend = 1'h1;
endmodule

