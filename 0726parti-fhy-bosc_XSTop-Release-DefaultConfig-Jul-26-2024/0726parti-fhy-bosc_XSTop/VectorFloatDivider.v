// Generated by CIRCT firtool-1.74.0
module VectorFloatDivider(
  input         clock,
  input         reset,
  input         io_start_valid_i,
  output        io_start_ready_o,
  input         io_flush_i,
  input  [1:0]  io_fp_format_i,
  input  [63:0] io_opa_i,
  input  [63:0] io_opb_i,
  input         io_is_sqrt_i,
  input  [2:0]  io_rm_i,
  output        io_finish_valid_o,
  input         io_finish_ready_i,
  output [63:0] io_fpdiv_res_o,
  output [19:0] io_fflags_o
);

  wire        _u_vector_float_divider_r64_io_start_ready_o;
  wire        _u_vector_float_divider_r64_io_finish_valid_o;
  wire [63:0] _u_vector_float_divider_r64_io_fpdiv_res_o;
  wire [19:0] _u_vector_float_divider_r64_io_fflags_o;
  wire        _u_vector_float_sqrt_r16_start_ready_o;
  wire        _u_vector_float_sqrt_r16_finish_valid_o;
  wire [63:0] _u_vector_float_sqrt_r16_fpsqrt_res_o;
  wire [19:0] _u_vector_float_sqrt_r16_fflags_o;
  fpsqrt_vector_r16 u_vector_float_sqrt_r16 (
    .clock          (clock),
    .reset          (reset),
    .start_valid_i  (io_is_sqrt_i & io_start_valid_i),
    .start_ready_o  (_u_vector_float_sqrt_r16_start_ready_o),
    .flush_i        (io_flush_i),
    .fp_format_i    (2'(io_fp_format_i - 2'h1)),
    .op_i           (io_opa_i),
    .rm_i           (io_rm_i),
    .finish_valid_o (_u_vector_float_sqrt_r16_finish_valid_o),
    .finish_ready_i (io_finish_ready_i),
    .fpsqrt_res_o   (_u_vector_float_sqrt_r16_fpsqrt_res_o),
    .fflags_o       (_u_vector_float_sqrt_r16_fflags_o)
  );
  VectorFloatDividerR64 u_vector_float_divider_r64 (
    .clock             (clock),
    .reset             (reset),
    .io_start_valid_i  (~io_is_sqrt_i & io_start_valid_i),
    .io_start_ready_o  (_u_vector_float_divider_r64_io_start_ready_o),
    .io_flush_i        (io_flush_i),
    .io_fp_format_i    (io_fp_format_i),
    .io_opa_i          (io_opa_i),
    .io_opb_i          (io_opb_i),
    .io_rm_i           (io_rm_i),
    .io_finish_valid_o (_u_vector_float_divider_r64_io_finish_valid_o),
    .io_finish_ready_i (io_finish_ready_i),
    .io_fpdiv_res_o    (_u_vector_float_divider_r64_io_fpdiv_res_o),
    .io_fflags_o       (_u_vector_float_divider_r64_io_fflags_o)
  );
  assign io_start_ready_o =
    _u_vector_float_divider_r64_io_start_ready_o & _u_vector_float_sqrt_r16_start_ready_o;
  assign io_finish_valid_o =
    _u_vector_float_divider_r64_io_finish_valid_o
    | _u_vector_float_sqrt_r16_finish_valid_o;
  assign io_fpdiv_res_o =
    (_u_vector_float_divider_r64_io_finish_valid_o
       ? _u_vector_float_divider_r64_io_fpdiv_res_o
       : 64'h0)
    | (_u_vector_float_sqrt_r16_finish_valid_o
         ? _u_vector_float_sqrt_r16_fpsqrt_res_o
         : 64'h0);
  assign io_fflags_o =
    (_u_vector_float_divider_r64_io_finish_valid_o
       ? _u_vector_float_divider_r64_io_fflags_o
       : 20'h0)
    | (_u_vector_float_sqrt_r16_finish_valid_o
         ? _u_vector_float_sqrt_r16_fflags_o
         : 20'h0);
endmodule

